name: Flutter CI/CD with Shorebird

on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: flutter pub get

      # 4Ô∏è‚É£ Install Shorebird manually
      - name: Install Shorebird CLI
        run: |
          echo "üîß Installing Shorebird CLI..."
          mkdir -p $HOME/.shorebird/bin
          curl -L https://github.com/shorebirdtech/shorebird/releases/latest/download/shorebird_linux.tar.gz -o shorebird.tar.gz
          tar -xzf shorebird.tar.gz -C $HOME/.shorebird/bin
          export PATH="$HOME/.shorebird/bin:$PATH"
          echo "$HOME/.shorebird/bin" >> $GITHUB_PATH
          shorebird --version

      # 5Ô∏è‚É£ Check version change
      - name: Check version change
        id: version
        run: |
          VERSION_FILE="pubspec.yaml"
          VERSION=$(grep '^version:' $VERSION_FILE | awk '{print $2}')
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "Current version: $VERSION"
          git fetch origin main --depth=1
          OLD_VERSION=$(git show origin/main:pubspec.yaml | grep '^version:' | awk '{print $2}' || echo "")
          echo "old_version=$OLD_VERSION" >> $GITHUB_ENV

          if [ "$VERSION" != "$OLD_VERSION" ]; then
            echo "has_change=true" >> $GITHUB_ENV
          else
            echo "has_change=false" >> $GITHUB_ENV
          fi

      # 6Ô∏è‚É£ Build or patch using Shorebird
      - name: Build or Patch
        run: |
          export PATH="$HOME/.shorebird/bin:$PATH"
          if [ "$has_change" = "true" ]; then
            echo "üöÄ Detected version change: $version"
            echo "Building new release..."
            shorebird release android --force
            shorebird release ios --force
          else
            echo "üß© No version change, creating patch..."
            shorebird patch android
            shorebird patch ios
          fi
        env:
          SHOREBIRD_AUTH_TOKEN: ${{ secrets.SHOREBIRD_AUTH_TOKEN }}

      # 7Ô∏è‚É£ Send to Telegram
      - name: Send APK to Telegram
        if: env.has_change == 'true'
        run: |
          APK_PATH=$(find build/app/outputs/flutter-apk -name "*.apk" | head -n 1)
          echo "üì¶ Sending $APK_PATH to Telegram..."
          curl -F chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
               -F document=@"$APK_PATH" \
               https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument
